{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  makeSource,\n  ComputedFields,\n} from \"contentlayer/source-files\"; // eslint-disable-line\nimport rehypePrism from \"rehype-prism-plus\";\nimport rehypeSlug from \"rehype-slug\";\n\nconst getSlug = (doc: any) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\");\n\n/** For the blog post */\n\n/**Re-search on this */\nconst postComputedFields: ComputedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => getSlug(doc),\n  },\n  image: {\n    type: \"string\",\n    resolve: (doc) => `/blog/${getSlug(doc)}/image.png`,\n  },\n  og: {\n    type: \"string\",\n    resolve: (doc) => `/blog/${getSlug(doc)}/image.png`,\n  },\n};\n\n/**Posts doc type */\nexport const Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: `blog/**/*.mdx`,\n  contentType: \"mdx\",\n  /**Fields */\n  fields: {\n    title: { type: \"string\", required: true },\n    summary: { type: \"string\", required: true },\n    publishedAt: { type: \"string\", required: true },\n    updatedAt: { type: \"string\", required: false },\n    tags: { type: \"json\", required: false },\n    featured: { type: \"boolean\", required: false },\n    shortTitle: { type: \"string\", required: false, default: \"\" },\n  },\n  computedFields: postComputedFields,\n}));\n\n/**Code snippets (re-search) */\n// const codeSnippetsComputedFields: ComputedFields = {\n//   slug: {\n//     type: \"string\",\n//     resolve: (doc) => getSlug(doc),\n//   },\n//   image: {\n//     type: \"string\",\n//     resolve: (doc) => `/projects/${getSlug(doc)}/image.png`,\n//   },\n// };\n\n// export const CodeSnippets = defineDocumentType(() => ({\n//   name: \"Code snippets\",\n//   filePathPattern: `code-snippets/**/*.mdx`,\n//   contentType: \"mdx\",\n//   fields: {\n//     title: { type: \"string\", required: true },\n//     summary: { type: \"string\", required: true },\n//     publishedAt: { type: \"string\", required: true },\n//     updatedAt: { type: \"string\", required: false },\n//     tags: { type: \"json\", required: false },\n//     featured: { type: \"boolean\", required: false },\n//     shortTitle: { type: \"string\", required: false, default: \"\" },\n//   },\n//   computedFields: codeSnippetsComputedFields,\n// }));\n\nexport default makeSource({\n  contentDirPath: \"content\",\n  documentTypes: [Post],\n  mdx: {\n    rehypePlugins: [rehypePrism, rehypeSlug],\n  },\n});\n"],
  "mappings": ";AAAA;AAAA,EACE;AAAA,EACA;AAAA,OAEK;AACP,OAAO,iBAAiB;AACxB,OAAO,gBAAgB;AAEvB,IAAM,UAAU,CAAC,QAAa,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAK1E,IAAM,qBAAqC;AAAA,EACzC,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,QAAQ,GAAG;AAAA,EAC/B;AAAA,EACA,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,SAAS,QAAQ,GAAG,CAAC;AAAA,EACzC;AAAA,EACA,IAAI;AAAA,IACF,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,SAAS,QAAQ,GAAG,CAAC;AAAA,EACzC;AACF;AAGO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA;AAAA,EAEb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,WAAW,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC7C,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,IACtC,UAAU,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,IAC7C,YAAY,EAAE,MAAM,UAAU,UAAU,OAAO,SAAS,GAAG;AAAA,EAC7D;AAAA,EACA,gBAAgB;AAClB,EAAE;AA8BF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,aAAa,UAAU;AAAA,EACzC;AACF,CAAC;",
  "names": []
}
