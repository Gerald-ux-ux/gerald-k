// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Code snippets = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Code snippets'
  title: string
  summary: string
  publishedAt: string
  updatedAt?: string | undefined
  tags?: any | undefined
  featured?: boolean | undefined
  shortTitle: string
  /** MDX file body */
  body: MDX
  slug: string
  image: string
}

export type Post = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Post'
  title: string
  summary: string
  publishedAt: string
  updatedAt?: string | undefined
  tags?: any | undefined
  featured?: boolean | undefined
  shortTitle: string
  /** MDX file body */
  body: MDX
  slug: string
  image: string
  og: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Code snippets | Post
export type DocumentTypeNames = 'Code snippets' | 'Post'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allPosts: Post[]
  allCode snippets: Code snippets[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Code snippets: Code snippets
  Post: Post
}

export type NestedTypeMap = {

}

 